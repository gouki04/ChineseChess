这个本人第一个真正意义上的游戏。
感觉除了爽还是爽~~~~
界面不够美观，效果不够华丽・・・
这些都不关我的事~~因为我根本就没想把它搞得多好看~
程序员嘛~~程序功能齐全，可以正常运行就得了

最大的遗憾是实现不了象棋AI，稍微研究了一下・・
毅然放弃了・・本人的象棋除了水还是水・・
所谓的双人对战看起来太别扭了・・还是自己跟自己下吧・
可惜没学会实现联网啊~~~

这次最大的发现是原来用Fireworks制作和处理图片都好方便。
操作和定位都很人性化，和适合程序员用呢~~~起码比起PhotoShop来说
上手时简单了。

对游戏编程有兴趣的朋友可以联系我啊
或者你对这个程序有什么意见看法也可以
本人的联系方式：E-Mail: gouki04@126.com
欢迎大家多多支持・・

如果你对本程序有兴趣，想去看懂这个程序的，可以接着看，否则就不要看了

//*******************************************************
先声明，程序写的确实不怎么规范，有些地方写得好笨，又懒得想

类简介：
1.程序的主类是CMapManager类，与所有的类关联，基本上所有数据和操作都保存在这里。

2.实现图片的显示，合成的是CDibSection类，主要用于载入位图。

3.CSprite类可以说是封装了CDibSection类的操作，简化了位图的显示以及合成操作。而CMapSprite类就是在CSprite类的基础上加上了一些位置信息，方便定位。最后，CChess类就是再加上了象棋的颜色以及类别等象棋的信息。

4.CMidi类封装多媒体API的mciSendCommand，简化了一般的音频载入和输出。


程序算法简介：
1.设定窗口大小为固定的640*480，不可最大化。方面实现定位显示的操作。

2.整个窗口其实是被分为20*15个小格（这也就是注释里格子的含义，是格子坐标），每个格子大小均为32*32像素。这样定位操作就更简单了。程序里用的图片都严格遵守了这个规格。每个图片的大小都是由N个这样的格子组成。更重要的是，棋盘的位置看似不好定位，其实棋盘的左上角坐标是（2，3）（格子坐标），而棋盘被分为9*10个格子，对应每一个可以下棋的位置。这样定位就显得简单很多了。

3.明眼人就可以看出CMapManager类并没有继承CWnd，也就是说不是一个窗口类，而是一个普通类。所以自然就没有消息响应函数，但程序里却出现了OnLButtonDown之类的函数，其实这个函数是假的消息响应函数，看看CGameView类就可以知道了，真正的各种响应函数的实现都是直接调用CMapManager类的函数，这里只是图个方便和容易理解，将实现函数的名字改为跟原消息响应函数一样而已。

4.其实要实现这样的象棋游戏并不困难，要图片操作的用CDibSection类和CMapSprite类就够了，要输出声音只要用CMidi类也够了，所以只要学会这几个类的主要接口（成员函数），很多事自然就解决了。这里简单说说，首先：

4.1.CDibSection类，主要是Copy函数和Mix函数，同样是图片合成功能，但Copy是简单的图片复制（直接用API函数BitBlt），而Mix则是加上了对透明色的操作，实现部分复制（相当于底色透明），因为bmp没有真正的透明色，所以要预设某一颜色为透明色（这种颜色一定要很少用到），这里默认使用的是RGB（0，255，0）亮绿色，所以看到所有图片的底色都是亮绿色的。

4.2.CMidi类，这个类很简单实用，使用时先定义一个CMidi类的对象，使用open函数初始化。（注意这里的初始化是将该对象关联上一个窗口而非具体音频。），要播放时直接用play函数就行了（这里才指定具体音频）。所以一个CMidi类的对象可以播放所有的音频，跟CDibSection类不一样，CDibSection类的对象在初始化时就要与一具体位图关联上。

5.程序里比较巧的一点是，用CChess Player1和Player2保存下所有棋子的贴图。而保存全个棋盘信息的是CMapData Map[10][9]中，要重点注意的是在Map中记录的棋子与Player1或2中记录的棋子是同一个的，看代码可以看到，在添加棋子的过程中将Map中添加的棋子定义为Player中的棋子的引用，也就是对两者操作是等价的，这样可以大大简化对指定棋盘位置的棋子的判断和操作。

6.还要说的一点是，在寻找可移动的位置时，因为不同棋子的可移动位置不一样，程序并没有想什么好的办法，用的最笨的逐个检查法，对所有可移动位置逐一检查是否可行。但炮有点特别，所以相应的代码最难看，其实也是逐个检查。方法好笨，这里不多说。

7.按钮按下效果的实现，这个最简单，用两个图就行了，一大一小的，按下时显示小的，按下后显示大的，看上去就像按钮被按下去了。

8.程序的注释大部分是用VC小助手自动生成的。我太懒了！！

9.最后说一下，如果你想自己动手用MFC写个小游戏，又碍于对图片，声音等的操作不熟悉，可以直接套用本程序的CDibSection，CMidi类，这样就可以站在游戏设计方面想问题，而不是烦着怎么实现那些底层操作。

还有什么不懂的就直接发邮件问我吧。批评建议也可以・・・